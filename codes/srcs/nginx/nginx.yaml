apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      name: nginx
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: service-nginx
          imagePullPolicy: Never
          ports:
          - containerPort: 80
          volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/conf.d
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/allow-shared-ip: shared
  name: nginx
  labels:
    app: nginx
spec:
  selector:
    app: nginx
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    app: nginx
data:
  localhost.conf: |
    server {
      listen 80		default_server;
      listen [::]:80	default_server;
      location / {
        try_files	$uri $uri/ =404;
      }
      location /wordpress/ {
        return 307	/wordpress;
      }
      location ~ \/phpmyadmin {
        rewrite				^/phpmyadmin(/.*)$ $1 break;
        proxy_set_header	X-Real-IP		$remote_addr;
        proxy_set_header	X-Forwarded-For	$remote_addr;
        proxy_set_header	Host			$host;
        proxy_pass			http://$host:5000;
      }
      # You may need this to prevent return 404 recursion.
      location = /404.html {
        internal;
      }
    }
  proxy.conf: |
    proxy_set_header	Host $host;
    proxy_set_header	X-Real-IP $host;
    proxy_set_header	X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header	X-Forwarded-Proto $scheme;
    proxy_set_header	X-Forwarded-Host $host;
